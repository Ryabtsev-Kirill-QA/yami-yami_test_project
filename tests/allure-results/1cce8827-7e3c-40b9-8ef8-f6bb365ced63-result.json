{"name": "test_add_to_cart", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.CartBadge____Qz1dM.CartBadge_big__JY6yx')).click\n\nReason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".CartBadge____Qz1dM.CartBadge_big__JY6yx\"}\n  (Session info: chrome=119.0.6045.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x011E72A3+45731]\n\t(No symbol) [0x01172D51]\n\t(No symbol) [0x0106880D]\n\t(No symbol) [0x0109B940]\n\t(No symbol) [0x0109BE0B]\n\t(No symbol) [0x010CD1F2]\n\t(No symbol) [0x010B8024]\n\t(No symbol) [0x010CB7A2]\n\t(No symbol) [0x010B7DD6]\n\t(No symbol) [0x010931F6]\n\t(No symbol) [0x0109439D]\n\tGetHandleVerifier [0x014F0716+3229462]\n\tGetHandleVerifier [0x015384C8+3523784]\n\tGetHandleVerifier [0x0153214C+3498316]\n\tGetHandleVerifier [0x01271680+611968]\n\t(No symbol) [0x0117CCCC]\n\t(No symbol) [0x01178DF8]\n\t(No symbol) [0x01178F1D]\n\t(No symbol) [0x0116B2C7]\n\tBaseThreadInitThunk [0x777805C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779178BD+237]\n\tRtlGetAppContainerNamedObjectPath [0x7791788D+189]\n\nScreenshot: file://C:\\Users\\Kirill\\.selene\\screenshots\\1701192967295\\1701192967295.png\nPageSource: file://C:\\Users\\Kirill\\.selene\\screenshots\\1701192967295\\1701192967295.html", "trace": "fn = <selene.core.wait.Command object at 0x00000205819A1110>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\n..\\venv\\Lib\\site-packages\\selene\\core\\wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Command object at 0x00000205819A1110>\nentity = <selene.core.entity.Element object at 0x00000205825E4D10>\n\n    def __call__(self, entity: E) -> R:\n>       return self._fn(entity)\n\n..\\venv\\Lib\\site-packages\\selene\\core\\wait.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nelement = <selene.core.entity.Element object at 0x00000205825E4D10>\n\n    def raw_click(element: Element):\n>       element.locate().click()\n\n..\\venv\\Lib\\site-packages\\selene\\core\\entity.py:529: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.entity.Element object at 0x00000205825E4D10>\n\n    def locate(self) -> WebElement:\n>       return self._locator()\n\n..\\venv\\Lib\\site-packages\\selene\\core\\entity.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.locator.Locator object at 0x000002058284B8D0>\n\n    def __call__(self) -> T:\n>       return self._locate()\n\n..\\venv\\Lib\\site-packages\\selene\\core\\locator.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n>       Locator(f'{self}.element({by})', lambda: self.driver.find_element(*by)),\n        self.config,\n    )\n\n..\\venv\\Lib\\site-packages\\selene\\core\\entity.py:1133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"462cd8e5f46706895b6113ba4f06cac3\")>\nby = 'css selector', value = '.CartBadge____Qz1dM.CartBadge_big__JY6yx'\n\n    def find_element(self, by=By.ID, value: Optional[str] = None) -> WebElement:\n        \"\"\"Find an element given a By strategy and locator.\n    \n        :Usage:\n            ::\n    \n                element = driver.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if isinstance(by, RelativeBy):\n            elements = self.find_elements(by=by, value=value)\n            if not elements:\n                raise NoSuchElementException(f\"Cannot locate relative element with: {by.root}\")\n            return elements[0]\n    \n        if by == By.ID:\n            by = By.CSS_SELECTOR\n            value = f'[id=\"{value}\"]'\n        elif by == By.CLASS_NAME:\n            by = By.CSS_SELECTOR\n            value = f\".{value}\"\n        elif by == By.NAME:\n            by = By.CSS_SELECTOR\n            value = f'[name=\"{value}\"]'\n    \n>       return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:738: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"462cd8e5f46706895b6113ba4f06cac3\")>\ndriver_command = 'findElement'\nparams = {'using': 'css selector', 'value': '.CartBadge____Qz1dM.CartBadge_big__JY6yx'}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        params = self._wrap_value(params)\n    \n        if self.session_id:\n            if not params:\n                params = {\"sessionId\": self.session_id}\n            elif \"sessionId\" not in params:\n                params[\"sessionId\"] = self.session_id\n    \n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020582873190>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x779178BD+237]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7791788D+189]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".CartBadge____Qz1dM.CartBadge_big__JY6yx\"}\nE         (Session info: chrome=119.0.6045.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x011E72A3+45731]\nE       \t(No symbol) [0x01172D51]\nE       \t(No symbol) [0x0106880D]\nE       \t(No symbol) [0x0109B940]\nE       \t(No symbol) [0x0109BE0B]\nE       \t(No symbol) [0x010CD1F2]\nE       \t(No symbol) [0x010B8024]\nE       \t(No symbol) [0x010CB7A2]\nE       \t(No symbol) [0x010B7DD6]\nE       \t(No symbol) [0x010931F6]\nE       \t(No symbol) [0x0109439D]\nE       \tGetHandleVerifier [0x014F0716+3229462]\nE       \tGetHandleVerifier [0x015384C8+3523784]\nE       \tGetHandleVerifier [0x0153214C+3498316]\nE       \tGetHandleVerifier [0x01271680+611968]\nE       \t(No symbol) [0x0117CCCC]\nE       \t(No symbol) [0x01178DF8]\nE       \t(No symbol) [0x01178F1D]\nE       \t(No symbol) [0x0116B2C7]\nE       \tBaseThreadInitThunk [0x777805C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x779178BD+237]\nE       \tRtlGetAppContainerNamedObjectPath [0x7791788D+189]\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_add_to_cart():\n        main_page = MainPage()\n    \n        position = Position(name='Black and white')\n    \n        main_page.open()\n    \n        main_page.search_position_in_menu(position)\n        main_page.add_to_cart()\n    \n>       main_page.go_to_cart()\n\ntest_adding_to_cart.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\main_page.py:67: in go_to_cart\n    browser.element('.CartBadge____Qz1dM.CartBadge_big__JY6yx').click()\n..\\venv\\Lib\\site-packages\\selene\\core\\entity.py:533: in click\n    self.wait.for_(\n..\\venv\\Lib\\site-packages\\selene\\core\\wait.py:143: in for_\n    return self._decorator(self)(logic)(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.wait.Command object at 0x00000205819A1110>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_message = str(reason)\n    \n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=reason_message,\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 4s, while waiting for:\nE                   browser.element(('css selector', '.CartBadge____Qz1dM.CartBadge_big__JY6yx')).click\nE                   \nE                   Reason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".CartBadge____Qz1dM.CartBadge_big__JY6yx\"}\nE                     (Session info: chrome=119.0.6045.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE                   Stacktrace:\nE                   \tGetHandleVerifier [0x011E72A3+45731]\nE                   \t(No symbol) [0x01172D51]\nE                   \t(No symbol) [0x0106880D]\nE                   \t(No symbol) [0x0109B940]\nE                   \t(No symbol) [0x0109BE0B]\nE                   \t(No symbol) [0x010CD1F2]\nE                   \t(No symbol) [0x010B8024]\nE                   \t(No symbol) [0x010CB7A2]\nE                   \t(No symbol) [0x010B7DD6]\nE                   \t(No symbol) [0x010931F6]\nE                   \t(No symbol) [0x0109439D]\nE                   \tGetHandleVerifier [0x014F0716+3229462]\nE                   \tGetHandleVerifier [0x015384C8+3523784]\nE                   \tGetHandleVerifier [0x0153214C+3498316]\nE                   \tGetHandleVerifier [0x01271680+611968]\nE                   \t(No symbol) [0x0117CCCC]\nE                   \t(No symbol) [0x01178DF8]\nE                   \t(No symbol) [0x01178F1D]\nE                   \t(No symbol) [0x0116B2C7]\nE                   \tBaseThreadInitThunk [0x777805C9+25]\nE                   \tRtlGetAppContainerNamedObjectPath [0x779178BD+237]\nE                   \tRtlGetAppContainerNamedObjectPath [0x7791788D+189]\nE                   \nE                   Screenshot: file://C:\\Users\\Kirill\\.selene\\screenshots\\1701192967295\\1701192967295.png\nE                   PageSource: file://C:\\Users\\Kirill\\.selene\\screenshots\\1701192967295\\1701192967295.html\n\n..\\venv\\Lib\\site-packages\\selene\\core\\wait.py:141: TimeoutException"}, "attachments": [{"name": "stderr", "source": "ff86f69b-c020-4f69-a675-ad0d97f83e4a-attachment.txt", "type": "text/plain"}], "start": 1701192967330, "stop": 1701192982745, "uuid": "540182d2-36b3-4b8b-9d42-da98e7d5027f", "historyId": "e7e4995792ee57b88d73ccc48c686e6a", "testCaseId": "e7e4995792ee57b88d73ccc48c686e6a", "fullName": "tests.test_adding_to_cart#test_add_to_cart", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_adding_to_cart"}, {"name": "host", "value": "DESKTOP-U2EORTL"}, {"name": "thread", "value": "9520-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_adding_to_cart"}]}