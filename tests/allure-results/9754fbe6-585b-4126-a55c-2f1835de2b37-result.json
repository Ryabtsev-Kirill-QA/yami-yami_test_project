{"name": "test_searching_position_in_menu", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.Typography____IFtPc.Typography_fs17__YsV_0.Typography_dark__lM1H9.Typography_inline__oyzk9.CatalogItem_title__FbpD_')).has text Филадельфия\n\nReason: AssertionError: actual text: Black and white\nScreenshot: file://C:\\Users\\Kirill\\.selene\\screenshots\\1700769482758\\1700769482759.png\nPageSource: file://C:\\Users\\Kirill\\.selene\\screenshots\\1700769482758\\1700769482759.html", "trace": "fn = <selene.core.conditions.ElementCondition object at 0x0000027536B44610>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\n..\\venv\\Lib\\site-packages\\selene\\core\\wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x0000027536B44610>\nentity = <selene.core.entity.Element object at 0x0000027537762F90>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\n..\\venv\\Lib\\site-packages\\selene\\core\\condition.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x0000027537762F90>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__ if query_to_str.startswith('<function') else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text: Black and white\n\n..\\venv\\Lib\\site-packages\\selene\\core\\condition.py:146: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_searching_position_in_menu():\n        main_page = MainPage()\n    \n        position = Position(name='Филадельфия')\n    \n        main_page.open()\n    \n        main_page.search_position_in_menu(position)\n    \n>       main_page.position_must_found(position)\n\ntest_search_position.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\main_page.py:28: in position_must_found\n    self.menu_position.should(have.text(f'{position.name}'))\n..\\venv\\Lib\\site-packages\\selene\\core\\entity.py:136: in should\n    self.wait.for_(condition)\n..\\venv\\Lib\\site-packages\\selene\\core\\wait.py:143: in for_\n    return self._decorator(self)(logic)(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.conditions.ElementCondition object at 0x0000027536B44610>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_message = str(reason)\n    \n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=reason_message,\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 4s, while waiting for:\nE                   browser.element(('css selector', '.Typography____IFtPc.Typography_fs17__YsV_0.Typography_dark__lM1H9.Typography_inline__oyzk9.CatalogItem_title__FbpD_')).has text Филадельфия\nE                   \nE                   Reason: AssertionError: actual text: Black and white\nE                   Screenshot: file://C:\\Users\\Kirill\\.selene\\screenshots\\1700769482758\\1700769482759.png\nE                   PageSource: file://C:\\Users\\Kirill\\.selene\\screenshots\\1700769482758\\1700769482759.html\n\n..\\venv\\Lib\\site-packages\\selene\\core\\wait.py:141: TimeoutException"}, "attachments": [{"name": "stderr", "source": "237c94a0-00fb-47a3-8582-af224b78b9e7-attachment.txt", "type": "text/plain"}], "start": 1700769482785, "stop": 1700769493769, "uuid": "457d255b-8fd1-42fa-92cc-f3a5a439e323", "historyId": "117fe824e415179bc8940f5f4926653b", "testCaseId": "117fe824e415179bc8940f5f4926653b", "fullName": "tests.test_search_position#test_searching_position_in_menu", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_search_position"}, {"name": "host", "value": "DESKTOP-U2EORTL"}, {"name": "thread", "value": "9904-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_search_position"}]}